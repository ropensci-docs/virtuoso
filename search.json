[{"path":"https://docs.ropensci.org/virtuoso/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/virtuoso/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to virtuoso","title":"Contributing to virtuoso","text":"outlines propose change virtuoso. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://docs.ropensci.org/virtuoso/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to virtuoso","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://docs.ropensci.org/virtuoso/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to virtuoso","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://docs.ropensci.org/virtuoso/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to virtuoso","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://docs.ropensci.org/virtuoso/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to virtuoso","text":"Please note virtuoso project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/virtuoso/CONTRIBUTING.html","id":"see-tidyverse-development-contributing-guide","dir":"","previous_headings":"","what":"See tidyverse development contributing guide","title":"Contributing to virtuoso","text":"details.","code":""},{"path":"https://docs.ropensci.org/virtuoso/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2018 Carl Boettiger Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/virtuoso/articles/datalake.html","id":"tabular-data","dir":"Articles","previous_headings":"","what":"Tabular Data","title":"The Data Lake: Schema on Read","text":"start Virtuoso server, wait come , connect: can represent data RDF little care. instance, consider nycflights13 data. First, must represent primary foreign keys table URIs, indicated prefix, bare strings: write data.frames nquads. Recall cell data.frame can represented triple, column predicate, primary key (row number) subject, cell value object. turn column names primary keys URIs using prefix based table name. ’re ready import triples. may take minutes: data three tables now reduced single triplestore graph, one triple data point. Rather joining tables, can write SPARQL query names columns want.","code":"vos_start() #> Virtuoso is already running with pid: 3647 con <- vos_connect() uri_flights <- flights %>%    mutate(tailnum = paste0(\"planes:\", tailnum),          carrier = paste0(\"airlines:\", carrier)) write_nquads(airlines,  \"airlines.nq\", key = \"carrier\", prefix = \"airlines:\") write_nquads(planes,  \"planes.nq\", key = \"tailnum\", prefix = \"planes:\") write_nquads(uri_flights,  \"flights.nq\", prefix = \"flights:\") system.time(   vos_import(con, c(\"flights.nq\", \"planes.nq\", \"airlines.nq\")) ) #>    user  system elapsed  #>   0.024   0.037 163.698 query <-  'SELECT  ?carrier ?name ?manufacturer ?model ?dep_delay WHERE { ?flight <flights:tailnum>  ?tailnum . ?flight <flights:carrier>  ?carrier . ?flight <flights:dep_delay>  ?dep_delay . ?tailnum <planes:manufacturer> ?manufacturer . ?tailnum <planes:model> ?model . ?carrier <airlines:name> ?name }'  system.time( df <- vos_query(con, query) ) #>    user  system elapsed  #>   1.174   0.037   4.393  head(df) #>       carrier                     name manufacturer     model dep_delay #> 1 airlines:EV ExpressJet Airlines Inc.      EMBRAER EMB-145XR        -6 #> 2 airlines:EV ExpressJet Airlines Inc.      EMBRAER EMB-145XR        14 #> 3 airlines:EV ExpressJet Airlines Inc.      EMBRAER EMB-145XR         2 #> 4 airlines:EV ExpressJet Airlines Inc.      EMBRAER EMB-145XR        -7 #> 5 airlines:EV ExpressJet Airlines Inc.      EMBRAER EMB-145XR       -10 #> 6 airlines:EV ExpressJet Airlines Inc.      EMBRAER EMB-145XR        -7"},{"path":"https://docs.ropensci.org/virtuoso/articles/datalake.html","id":"list-data","dir":"Articles","previous_headings":"","what":"List Data","title":"The Data Lake: Schema on Read","text":"Transform JSON (list data) triples. case, large JSON blob (R list) containing metadata rOpenSci packages: bulk-import Find packages “Carl Boettiger” “author”, return: package name, license, co-author surnames:","code":"download.file(\"https://raw.githubusercontent.com/ropensci/roregistry/gh-pages/raw_cm.json\", \"raw_cm.json\") nq <- jsonld::jsonld_to_rdf(\"raw_cm.json\") # drops implicit URIs if not base URIs writeLines(nq, gzfile(\"ro.nq.gz\")) vos_import(con, \"ro.nq.gz\") query <- \"PREFIX schema: <http://schema.org/> SELECT DISTINCT ?coauthor  ?license ?package   WHERE {  ?s schema:name ?package ;     schema:author ?author ;     schema:license ?license ;     schema:author ?coauth .  ?author schema:givenName 'Carl' .  ?author schema:familyName 'Boettiger' .  ?coauth schema:familyName ?coauthor }\"  vos_query(con, query) %>% distinct() %>% mutate(license = basename(license), package = basename(package)) # Tidy up URIs into names #>       coauthor      license                                                                package #> 1    Boettiger          MIT                               emld: Ecological Metadata as Linked Data #> 2    Boettiger          MIT      ramlegacy: Download and Read RAM Legacy Stock Assessment Database #> 3        Gupta          MIT      ramlegacy: Download and Read RAM Legacy Stock Assessment Database #> 4         Lapp BSD-3-Clause                                               O for the 'NeXML' Format #> 5          Vos BSD-3-Clause                                               O for the 'NeXML' Format #> 6    Boettiger BSD-3-Clause                                               O for the 'NeXML' Format #> 7  Chamberlain BSD-3-Clause                                               O for the 'NeXML' Format #> 8   Shumelchyk BSD-3-Clause                                               O for the 'NeXML' Format #> 9    Boettiger          MIT                arkdb: Archive and Unarchive Databases Using Flat Files #> 10   Boettiger      GPL-3.0                 codemetar: Generate 'CodeMeta' Metadata for R Packages #> 11      Salmon      GPL-3.0                 codemetar: Generate 'CodeMeta' Metadata for R Packages #> 12   Boettiger          MIT                 EML: Read and Write Ecological Metadata Language Files #> 13       Jones          MIT                 EML: Read and Write Ecological Metadata Language Files #> 14   Boettiger      GPL-3.0                 piggyback: Managing Larger Data on a GitHub Repository #> 15   Boettiger          MIT                    rdflib: Tools to Manipulate and Query Semantic Data #> 16   Boettiger          MIT                                  rdryad: Access for Dryad Web Services #> 17 Chamberlain          MIT                                  rdryad: Access for Dryad Web Services #> 18         Ram          MIT                                  rdryad: Access for Dryad Web Services #> 19   Boettiger      CC0-1.0                                rfigshare: An R Interface to 'figshare' #> 20 Chamberlain      CC0-1.0                                rfigshare: An R Interface to 'figshare' #> 21        Hart      CC0-1.0                                rfigshare: An R Interface to 'figshare' #> 22         Ram      CC0-1.0                                rfigshare: An R Interface to 'figshare' #> 23   Boettiger      CC0-1.0                                   rfishbase: R Interface to 'FishBase' #> 24 Chamberlain      CC0-1.0                                   rfishbase: R Interface to 'FishBase' #> 25 Temple Lang      CC0-1.0                                   rfishbase: R Interface to 'FishBase' #> 26  Wainwright      CC0-1.0                                   rfishbase: R Interface to 'FishBase' #> 27   Boettiger          MIT                         virtuoso: Interface to 'Virtuoso' using 'ODBC' #> 28   Boettiger          MIT           datasauce: Create and manipulate Schema.org Dataset metadata #> 29 Chamberlain          MIT           datasauce: Create and manipulate Schema.org Dataset metadata #> 30 Chamberlain          MIT                        rcrossref: Client for Various 'CrossRef' 'APIs' #> 31         Zhu          MIT                        rcrossref: Client for Various 'CrossRef' 'APIs' #> 32        Jahn          MIT                        rcrossref: Client for Various 'CrossRef' 'APIs' #> 33   Boettiger          MIT                        rcrossref: Client for Various 'CrossRef' 'APIs' #> 34         Ram          MIT                        rcrossref: Client for Various 'CrossRef' 'APIs' #> 35         Ram          MIT      rfisheries: Programmatic Interface to the 'openfisheries.org' API #> 36   Boettiger          MIT      rfisheries: Programmatic Interface to the 'openfisheries.org' API #> 37        Dyck          MIT      rfisheries: Programmatic Interface to the 'openfisheries.org' API #> 38   Boettiger      CC0-1.0          rgpdd: R Interface to the Global Population Dynamics Database #> 39       Harte      CC0-1.0          rgpdd: R Interface to the Global Population Dynamics Database #> 40 Chamberlain      CC0-1.0          rgpdd: R Interface to the Global Population Dynamics Database #> 41         Ram      CC0-1.0          rgpdd: R Interface to the Global Population Dynamics Database #> 42 Chamberlain          MIT                 rplos: Interface to the Search API for 'PLoS' Journals #> 43   Boettiger          MIT                 rplos: Interface to the Search API for 'PLoS' Journals #> 44         Ram          MIT                 rplos: Interface to the Search API for 'PLoS' Journals #> 45 Chamberlain          MIT                      taxview: Tools for Vizualizing Data Taxonomically #> 46   Boettiger          MIT                      taxview: Tools for Vizualizing Data Taxonomically #> 47   Boettiger      CC0-1.0 treebase: Discovery, Access and Manipulation of 'TreeBASE' Phylogenies #> 48 Temple Lang      CC0-1.0 treebase: Discovery, Access and Manipulation of 'TreeBASE' Phylogenies"},{"path":"https://docs.ropensci.org/virtuoso/articles/installation.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction: Virtuoso Installation and Configuration","text":"virtuoso package provides installation helpers Mac OSX Windows users function vos_install(). time writing, Mac OS X installer uses Homebrew install Virtuoso Open Source server (similar hugo installer RStudio’s blogdown). Windows, vos_install() downloads executes Windows self-extracting archive (.exe file), open standard installation dialog interactive mode, run automatically run interactive session. automated installer provided Linux systems; Linux users encouraged simply install appropriate binaries distribution (e.g. apt-get install -y virtuoso-opensource Debian/Ubuntu systems).","code":""},{"path":"https://docs.ropensci.org/virtuoso/articles/installation.html","id":"configuration","dir":"Articles","previous_headings":"","what":"Configuration","title":"Introduction: Virtuoso Installation and Configuration","text":"Virtuoso Open Source configuration controlled virtouso.ini file, sets, among things, directories can accessed tasks bulk import, well performance tweaks available memory. Unfortunately, Virtuoso server process (virtuoso-t application) start without path appropriate config file, installers (e.g. Windows Linux) frequently install example virtuoso.ini location can hard find users permission edit directly. Moreover, file format always intuitive edit. virtuoso package thus helps locate file provides helper function, vos_configure(), create modify configuration file. reasonable defaults also provided function, users usually need call function manually. vos_configure() called automatically vos_start() path virtuoso.ini file passed vos_start(). addition configuring Virtuoso’s settings virtuoso.ini file, common barrier setting driver ODBC connection. installers (Mac, Linux) automatically add appropriate driver active odbcinst.ini file predictable Driver Server Name, need know initiate ODBC connection. internal helper function handles identifying drivers establishing appropriate odcinst.ini automatically necessary.","code":""},{"path":"https://docs.ropensci.org/virtuoso/articles/installation.html","id":"server-management","dir":"Articles","previous_headings":"","what":"Server management","title":"Introduction: Virtuoso Installation and Configuration","text":"Lastly, Virtuoso Open Source often run system service, starting operating system starts. often undesirable, casual laptop user want service running time, can difficult control users unfamiliar managing background services operating systems. Instead behavior, virtuoso package provides explicit interface control external server. server starts created vos_start(), ends automatically R process ends, can killed, paused, resumed time R (e.g. via vos_kill()). Helper utilities can also query status logs server R. database servers, data persists disk, appropriate location OS determined rappdirs package, helper utility, vos_delete_db() can remove persistent storage location. Users can also connect directly existing (local remote) Virtuoso instance passing appropriate information vos_connect(), can convenient queries. Note Virtuoso back-end provided R package rdflib can also connect Virtuoso server created virtuoso R package, though queries loading queries redland libraries used rdflib generally slower direct calls ODBC via virtuoso package functions, often dramatically large triplestores.","code":""},{"path":"https://docs.ropensci.org/virtuoso/articles/virtuoso.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started","text":"can install development version virtuoso GitHub :","code":"remotes::install_github(\"cboettig/virtuoso\")"},{"path":"https://docs.ropensci.org/virtuoso/articles/virtuoso.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Getting Started","text":"Mac users, virtuoso package includes utility function install configure local Virtuoso Open Source instance using Homebrew. Otherwise, simply install Virtuoso Open Source edition operating system. can now start Virtuoso server R: server running, can connect database. connection now live, accepts SPARQL queries directly.","code":"library(virtuoso) vos_install() #> Virtuoso is already installed. vos_start() #> PROCESS 'virtuoso-t', running, pid 352405. #> Server is now starting up, this may take a few seconds... #> latest log entry: 22:02:55 Server online at 1111 (pid 352405) con <- vos_connect() DBI::dbGetQuery(con, \"SPARQL SELECT * WHERE { ?s ?p ?o } LIMIT 4\") #>                                                                              s #> 1                   http://www.openlinksw.com/virtrdf-data-formats#default-iid #> 2          http://www.openlinksw.com/virtrdf-data-formats#default-iid-nullable #> 3          http://www.openlinksw.com/virtrdf-data-formats#default-iid-nonblank #> 4 http://www.openlinksw.com/virtrdf-data-formats#default-iid-nonblank-nullable #>                                                 p                                                       o #> 1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat #> 2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat #> 3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat #> 4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat"},{"path":"https://docs.ropensci.org/virtuoso/articles/virtuoso.html","id":"dsl","dir":"Articles","previous_headings":"","what":"DSL","title":"Getting Started","text":"virtuoso also provides wrappers around common queries make easier work Virtuoso RDF. bulk loader can used quickly import existing sets triples. Can also read compressed formats well. Remember set pattern match appropriately. convenient N-Quads compress particularly well, often factor 20 (rather, can particularly large uncompressed, owing repeated property subject URIs). vos_import invisibly returns table loaded files, error message loading times. file imported, error message returned: can now query imported data using SPARQL.","code":"example <- system.file(\"extdata\", \"person.nq\", package = \"virtuoso\") vos_import(con, example) ex <- system.file(\"extdata\", \"library.nq.gz\", package = \"virtuoso\") vos_import(con, ex) bad_file <- system.file(\"extdata\", \"bad_quads.nq\", package = \"virtuoso\") vos_import(con, bad_file) #> Error: Error importing: bad_quads.nq 37000 SP029: NQuads RDF loader, line 2: Undefined namespace prefix at ITIS:1000000 vos_query(con,  \"SELECT ?p ?o   WHERE { ?s ?p ?o .         ?s a <http://schema.org/Person>        }\") #>                                                 p                        o #> 1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://schema.org/Person #> 2                      http://schema.org/jobTitle                Professor #> 3                          http://schema.org/name                 Jane Doe #> 4                     http://schema.org/telephone           (425) 123-4567 #> 5                           http://schema.org/url   http://www.janedoe.com vos_query(con,  \"SELECT ?p ?o   WHERE { ?s ?p ?o .         ?s a <http://example.org/vocab#Chapter>        }\") #>                                                 p                                        o #> 1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type         http://example.org/vocab#Chapter #> 2     http://purl.org/dc/elements/1.1/description An introductory chapter on The Republic. #> 3           http://purl.org/dc/elements/1.1/title                         The Introduction"},{"path":"https://docs.ropensci.org/virtuoso/articles/virtuoso.html","id":"server-controls","dir":"Articles","previous_headings":"","what":"Server controls","title":"Getting Started","text":"can control virtuoso server started vos_start() using series helper commands. Advanced usage note: vos_start() invisibly returns processx object can pass server control functions, access embedded processx control methods directly. virtuoso package also caches object environment can accessed directly without keep track object global environment. Use vos_process() return processx object. example:","code":"vos_status() #> latest log entry: 22:02:56 PL LOG: No more files to load. Loader has finished, #> [1] \"sleeping\" library(ps) p <- vos_process() ps_is_running(p) #> [1] TRUE ps_cpu_times(p) #>            user          system   children_user children_system  #>            1.82            0.54            0.00            0.00 ps_suspend(p) #> NULL ps_resume(p) #> NULL"},{"path":"https://docs.ropensci.org/virtuoso/articles/virtuoso.html","id":"going-further","dir":"Articles","previous_headings":"","what":"Going further","title":"Getting Started","text":"Please see package vignettes information: details Virtuoso Installation & configuration Data Lake: richer examples RDF use","code":""},{"path":"https://docs.ropensci.org/virtuoso/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Carl Boettiger. Author, maintainer, copyright holder. Bryce Mecum. Contributor.","code":""},{"path":"https://docs.ropensci.org/virtuoso/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Boettiger C (2024). virtuoso: Interface 'Virtuoso' using 'ODBC'. R package version 0.1.8, https://github.com/ropensci/virtuoso.","code":"@Manual{,   title = {virtuoso: Interface to 'Virtuoso' using 'ODBC'},   author = {Carl Boettiger},   year = {2024},   note = {R package version 0.1.8},   url = {https://github.com/ropensci/virtuoso}, }"},{"path":"https://docs.ropensci.org/virtuoso/index.html","id":"virtuoso-","dir":"","previous_headings":"","what":"Interface to Virtuoso using ODBC","title":"Interface to Virtuoso using ODBC","text":"goal virtuoso provide easy interface Virtuoso RDF database R.","code":""},{"path":"https://docs.ropensci.org/virtuoso/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface to Virtuoso using ODBC","text":"can install development version virtuoso GitHub :","code":"remotes::install_github(\"ropensci/virtuoso\")"},{"path":"https://docs.ropensci.org/virtuoso/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Interface to Virtuoso using ODBC","text":"Mac users, virtuoso package includes utility function install configure local Virtuoso Open Source instance using Homebrew. Otherwise, simply install Virtuoso Open Source edition operating system. can now start Virtuoso server R: server running, can connect database. connection now live, accepts SPARQL queries directly.","code":"library(virtuoso) vos_install() #> Virtuoso is already installed. vos_start() #> PROCESS 'virtuoso-t', running, pid 14318. #> Server is now starting up, this may take a few seconds... #> latest log entry: 21:43:06 Server online at 1111 (pid 14318) con <- vos_connect() DBI::dbGetQuery(con, \"SPARQL SELECT * WHERE { ?s ?p ?o } LIMIT 4\") #>                                                                              s #> 1                   http://www.openlinksw.com/virtrdf-data-formats#default-iid #> 2          http://www.openlinksw.com/virtrdf-data-formats#default-iid-nullable #> 3          http://www.openlinksw.com/virtrdf-data-formats#default-iid-nonblank #> 4 http://www.openlinksw.com/virtrdf-data-formats#default-iid-nonblank-nullable #>                                                 p #> 1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type #> 2 http://www.w3.org/1999/02/22-rdf-syntax-ns#type #> 3 http://www.w3.org/1999/02/22-rdf-syntax-ns#type #> 4 http://www.w3.org/1999/02/22-rdf-syntax-ns#type #>                                                         o #> 1 http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat #> 2 http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat #> 3 http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat #> 4 http://www.openlinksw.com/schemas/virtrdf#QuadMapFormat"},{"path":"https://docs.ropensci.org/virtuoso/index.html","id":"dsl","dir":"","previous_headings":"","what":"DSL","title":"Interface to Virtuoso using ODBC","text":"virtuoso also provides wrappers around common queries make easier work Virtuoso RDF. bulk loader can used quickly import existing sets triples. Can also read compressed formats well. Remember set pattern match appropriately. convenient N-Quads compress particularly well, often factor 20 (rather, can particularly large uncompressed, owing repeated property subject URIs). vos_import invisibly returns table loaded files, error message loading times. file imported, error message returned: can now query imported data using SPARQL.","code":"example <- system.file(\"extdata\", \"person.nq\", package = \"virtuoso\") vos_import(con, example) ex <- system.file(\"extdata\", \"library.nq.gz\", package = \"virtuoso\") vos_import(con, ex) bad_file <- system.file(\"extdata\", \"bad_quads.nq\", package = \"virtuoso\") vos_import(con, bad_file) #> Error: Error importing: bad_quads.nq 37000 SP029: NQuads RDF loader, line 2: Undefined namespace prefix at ITIS:1000000 df <- vos_query(con,  \"SELECT ?p ?o   WHERE { ?s ?p ?o .         ?s a <http://schema.org/Person>        }\") head(df) #>                                                 p                        o #> 1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type http://schema.org/Person #> 2                      http://schema.org/jobTitle                Professor #> 3                          http://schema.org/name                 Jane Doe #> 4                     http://schema.org/telephone           (425) 123-4567 #> 5                           http://schema.org/url   http://www.janedoe.com vos_query(con,  \"SELECT ?p ?o   WHERE { ?s ?p ?o .         ?s a <http://example.org/vocab#Chapter>        }\") #>                                                 p #> 1 http://www.w3.org/1999/02/22-rdf-syntax-ns#type #> 2     http://purl.org/dc/elements/1.1/description #> 3           http://purl.org/dc/elements/1.1/title #>                                          o #> 1         http://example.org/vocab#Chapter #> 2 An introductory chapter on The Republic. #> 3                         The Introduction"},{"path":"https://docs.ropensci.org/virtuoso/index.html","id":"server-controls","dir":"","previous_headings":"","what":"Server controls","title":"Interface to Virtuoso using ODBC","text":"can control virtuoso server started vos_start() using series helper commands. Advanced usage note: vos_start() invisibly returns processx object can pass server control functions, access embedded processx control methods directly. virtuoso package also caches object environment can accessed directly without keep track object global environment. Use vos_process() return processx object. example:","code":"vos_status() #> latest log entry: 21:43:06 PL LOG: No more files to load. Loader has finished, #> [1] \"sleeping\" library(ps) p <- vos_process() ps_is_running(p) #> [1] TRUE ps_cpu_times(p) #>            user          system   children_user children_system  #>            1.61            0.29            0.00            0.00 ps_suspend(p) #> NULL ps_resume(p) #> NULL"},{"path":"https://docs.ropensci.org/virtuoso/index.html","id":"going-further","dir":"","previous_headings":"","what":"Going further","title":"Interface to Virtuoso using ODBC","text":"Please see package vignettes information: details Virtuoso Installation & configuration Data Lake: richer examples RDF use Please note virtuoso R package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/has_virtuoso.html","id":null,"dir":"Reference","previous_headings":"","what":"check for Virtuoso — has_virtuoso","title":"check for Virtuoso — has_virtuoso","text":"test system virtuoso installation path","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/has_virtuoso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for Virtuoso — has_virtuoso","text":"","code":"has_virtuoso()"},{"path":"https://docs.ropensci.org/virtuoso/reference/has_virtuoso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check for Virtuoso — has_virtuoso","text":"logical indicating virtuoso-t binary found now.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/has_virtuoso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check for Virtuoso — has_virtuoso","text":"","code":"has_virtuoso() #> [1] TRUE"},{"path":"https://docs.ropensci.org/virtuoso/reference/virtuoso-package.html","id":null,"dir":"Reference","previous_headings":"","what":"virtuoso: An R Interface to Virtuoso Using ODBC — virtuoso-package","title":"virtuoso: An R Interface to Virtuoso Using ODBC — virtuoso-package","text":"Virtuoso high-performance \"universal server,\" can act relational database (supporting standard SQL queries), Resource Description Framework (RDF) triplestore, supporting SPARQL queries semantic reasoning. virtuoso R package provides R users DBI-compatible connection Virtuoso database. package also provides helper routines install, launch, manage Virtuoso server locally Mac, Windows Linux platforms using standard interactive installers R command-line.  automatically handling setup steps, package can make Virtuoso considerably faster easier users deploy local environment. can used normal dplyr backend, Virtuoso excels used RDF triplestore.  Managing bulk import triples common serializations single intuitive command another key feature virtuoso R package.  Bulk import performance can tens hundreds times faster comparable imports using existing R tools, including rdflib redland packages.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/virtuoso/reference/virtuoso-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"virtuoso: An R Interface to Virtuoso Using ODBC — virtuoso-package","text":"Maintainer: Carl Boettiger cboettig@gmail.com (ORCID) [copyright holder] contributors: Bryce Mecum brycemecum@gmail.com (ORCID) [contributor]","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_configure.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure Virtuoso Server ini file — vos_configure","title":"Configure Virtuoso Server ini file — vos_configure","text":"Virtuoso Server configuration determined virtuoso.ini file server starts. file includes system-specific information install (location server files, addons, etc) user-configurable parameters. helper function provides way create modify appropriate virtuoso.ini file.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_configure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure Virtuoso Server ini file — vos_configure","text":"","code":"vos_configure(   dirs_allowed = getwd(),   gigs_ram = 2,   template = find_virtuoso_ini(),   db_dir = vos_db() )"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_configure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure Virtuoso Server ini file — vos_configure","text":"dirs_allowed Paths (relative absolute) directories Virtuoso read write access (e.g. bulk uploading). specified single comma-separated string. gigs_ram Indicate approximately maximum GB memory Virtuoso can access .  (Used set NumberOfBuffers & MaxDirtyBuffers config.) template Location existing virtuoso.ini file used template. default, vos_configure() attempt locate appropriate template system. db_dir location virtuoso.ini file written.  Virtuoso database log files also written .","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_configure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure Virtuoso Server ini file — vos_configure","text":"Writes requested virtuoso.ini file db_dir specified returns path file.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_configure.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Configure Virtuoso Server ini file — vos_configure","text":"http://docs.openlinksw.com/virtuoso/dbadm/","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_configure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure Virtuoso Server ini file — vos_configure","text":"","code":"# \\donttest{ # can take > 5s to test ## configure with typical defaults: vos_configure() #> Warning: Exiting, virtuoso template not found... is virtuoso installed? ## Increase or decrease RAM available to virtuoso: vos_configure(gigs_ram = 1) #> Warning: Exiting, virtuoso template not found... is virtuoso installed? # }"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to a Virtuoso Server over ODBC — vos_connect","title":"Connect to a Virtuoso Server over ODBC — vos_connect","text":"Connect Virtuoso Server ODBC","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to a Virtuoso Server over ODBC — vos_connect","text":"","code":"vos_connect(   driver = NULL,   uid = \"dba\",   pwd = \"dba\",   host = \"localhost\",   port = \"1111\",   system_odbcinst = find_odbcinst(),   local_odbcinst = odbcinst_path() )"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to a Virtuoso Server over ODBC — vos_connect","text":"driver Name Driver line ODBC configuration uid User id. Defaults \"dba\" pwd Password. Defaults \"dba\" host IP address Virtuoso Server port Port used Virtuoso. Defaults Virtuoso standard port, 1111 system_odbcinst Path system odbcinst.ini file. (require write access.) Default attempt find file system. local_odbcinst Path local odbcinst use.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to a Virtuoso Server over ODBC — vos_connect","text":"DBI connection Virtuoso database.  can passed additional virtuoso functions vos_import() vos_query(), can also used standard DBI dplyr database backend.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_connect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to a Virtuoso Server over ODBC — vos_connect","text":"Default parameters appropriate automatic installer provided package default settings typically used local Virtuoso installers.  Adjust connecting remote virtuoso server controlled R package.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to a Virtuoso Server over ODBC — vos_connect","text":"","code":"status <- vos_status() #> virtuoso isn't running. # \\donttest{ if(has_virtuoso()){ ## start up vos_start() con <- vos_connect() } #> Warning: Exiting, virtuoso template not found... is virtuoso installed? #> PROCESS 'virtuoso-t', running, pid 2465. #> Server is now starting up, this may take a few seconds... #> virtuoso isn't running. #> Error: nanodbc/nanodbc.cpp:1138: 00000 #> [OpenLink][Virtuoso iODBC Driver]CL033: Connect failed to localhost:1111 = localhost:1111.  # }"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_delete_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete Virtuoso Database — vos_delete_db","title":"Delete Virtuoso Database — vos_delete_db","text":"delete entire Virtuoso database fresh start.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_delete_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete Virtuoso Database — vos_delete_db","text":"","code":"vos_delete_db(ask = is_interactive(), db_dir = vos_db())"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_delete_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete Virtuoso Database — vos_delete_db","text":"ask ask deleting? db_dir location directory delete","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_delete_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete Virtuoso Database — vos_delete_db","text":"","code":"# \\dontshow{ virtuoso:::vos_test_paths() # } vos_delete_db()"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_destroy_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Destroy all Virtuoso's directories — vos_destroy_all","title":"Destroy all Virtuoso's directories — vos_destroy_all","text":"Provides clean reset system purges data files, config files, cache log files created virtuoso R package. uninstall Virtuoso software , see vos_uninstall() uninstall.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_destroy_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Destroy all Virtuoso's directories — vos_destroy_all","text":"","code":"vos_destroy_all(force = FALSE)"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_destroy_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Destroy all Virtuoso's directories — vos_destroy_all","text":"force permissions changed (possible) allow deletion?","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_destroy_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Destroy all Virtuoso's directories — vos_destroy_all","text":"TRUE entirely successful removing files, FALSE otherwise (invisibly).","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_destroy_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Destroy all Virtuoso's directories — vos_destroy_all","text":"","code":"# \\dontshow{ virtuoso:::vos_test_paths() # } vos_destroy_all()"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Bulk Import of RDF triples — vos_import","title":"Bulk Import of RDF triples — vos_import","text":"triples data can added one one SPARQL queries, Virtuoso bulk import far fastest way import large triplestores database.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bulk Import of RDF triples — vos_import","text":"","code":"vos_import(   con,   files = NULL,   wd = \".\",   glob = \"*\",   graph = \"rdflib\",   n_cores = 1L )"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bulk Import of RDF triples — vos_import","text":"con ODBC connection Virtuoso, vos_connect() files paths files imported wd Alternatively, can specify directory globbing pattern import. Note case, wd must (subdir ) AllowedDirs list virtuoso.ini file created vos_configure(). default, includes working directory called vos_start() vos_configure(). glob wildcard aka globbing pattern (e.g. `\"*.nq\"``). graph Name (technically URI) graph database. Can leave default. graph already specified import file (e.g. nquads), used instead. n_cores specify number available cores parallel loading. Particularly useful importing large numbers bulk files.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bulk Import of RDF triples — vos_import","text":"(Invisibly) returns status table bulk loader, indicating file loading time errors.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_import.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bulk Import of RDF triples — vos_import","text":"bulk importer imports files matching pattern given directory.  given list files, temporarily symlinked (copied Windows machines) Virtuoso app cache dir subdirectory, entire subdirectory loaded (filtered globbing pattern). files specified, load called directly specified directory pattern.  particularly useful loading large numbers files. Note Virtuoso recommends breaking large files multiple smaller ones, can improve loading time (particularly using multiple cores.) Virtuoso Bulk Importer recognizes following file formats: .grdf .nq .owl .nt .rdf .trig .ttl .xml can optionally gzipped (.gz extension).","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_import.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bulk Import of RDF triples — vos_import","text":"http://vos.openlinksw.com/owiki/wiki/VOS/VirtBulkRDFLoader","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bulk Import of RDF triples — vos_import","text":"","code":"vos_status() #> virtuoso isn't running.  # \\donttest{ if(has_virtuoso()){ vos_start() con <- vos_connect()  example <- system.file(\"extdata\", \"person.nq\", package = \"virtuoso\") vos_import(con, example) } #> Warning: Exiting, virtuoso template not found... is virtuoso installed? #> PROCESS 'virtuoso-t', running, pid 2512. #> Server is now starting up, this may take a few seconds... #> virtuoso isn't running. #> Error: nanodbc/nanodbc.cpp:1138: 00000 #> [OpenLink][Virtuoso iODBC Driver]CL033: Connect failed to localhost:1111 = localhost:1111.  # }"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper method for installing Virtuoso Server — vos_install","title":"Helper method for installing Virtuoso Server — vos_install","text":"Installation helper Mac Windows machines.  default, method download launch official .dmg .exe installer platform, running standard drag-n-drop installer interactive dialog.  Setting ask = FALSE allow installer run entirely unsupervised, suitable use scripts. Mac users can alternatively opt install Virtuoso HomeBrew setting use_brew=TRUE. Linux users simply install virtuoso-opensource package (e.g. debian & ubuntu) using package manager contacting system administrator.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper method for installing Virtuoso Server — vos_install","text":"","code":"vos_install(ask = is_interactive(), use_brew = FALSE)"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper method for installing Virtuoso Server — vos_install","text":"ask ask user interactive installation? use_brew use homebrew install? (MacOS )","code":""},{"path":[]},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_install.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper method for installing Virtuoso Server — vos_install","text":"","code":"if(has_virtuoso())  vos_install() #> Virtuoso is already installed."},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_kill.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop (kill) the Virtuoso server — vos_kill","title":"Stop (kill) the Virtuoso server — vos_kill","text":"Kill ends process started vos_start()","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_kill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop (kill) the Virtuoso server — vos_kill","text":"","code":"vos_kill(p = NA)"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_kill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop (kill) the Virtuoso server — vos_kill","text":"p process object, returned vos_process()  vos_start(). (restored cache provided)","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_kill.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stop (kill) the Virtuoso server — vos_kill","text":"vos_kill simply shuts local Virtuoso server, remove data stored database system. vos_kill() terminates process, removing process id process table.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_kill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stop (kill) the Virtuoso server — vos_kill","text":"","code":"# \\donttest{ if(has_virtuoso()){    vos_start()   vos_kill()    } #> Warning: Exiting, virtuoso template not found... is virtuoso installed? #> PROCESS 'virtuoso-t', running, pid 2557. #> Server is now starting up, this may take a few seconds... #> virtuoso isn't running. #> virtuoso isn't running. #> No active virtuoso process detected. #> NULL # }"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_list_graphs.html","id":null,"dir":"Reference","previous_headings":"","what":"List graphs — vos_list_graphs","title":"List graphs — vos_list_graphs","text":"List graphs","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_list_graphs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List graphs — vos_list_graphs","text":"","code":"vos_list_graphs(con)"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_list_graphs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List graphs — vos_list_graphs","text":"con ODBC connection Virtuoso, vos_connect()","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_list_graphs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List graphs — vos_list_graphs","text":"","code":"status <- vos_status() #> virtuoso isn't running. # \\donttest{ if(has_virtuoso() & is.null(status)){ vos_start() con <- vos_connect() vos_list_graphs(con)  }# } #> Warning: Exiting, virtuoso template not found... is virtuoso installed? #> PROCESS 'virtuoso-t', running, pid 2580. #> Server is now starting up, this may take a few seconds... #> virtuoso isn't running. #> Error: nanodbc/nanodbc.cpp:1138: 00000 #> [OpenLink][Virtuoso iODBC Driver]CL033: Connect failed to localhost:1111 = localhost:1111."},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the server logs — vos_log","title":"Query the server logs — vos_log","text":"Query server logs","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the server logs — vos_log","text":"","code":"vos_log(p = NA, collapse = NULL, just_errors = FALSE)"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the server logs — vos_log","text":"p process object, returned vos_process()  vos_start(). (restored cache provided) collapse optional character string separate lines single character string. just_errors logical, default FALSE. Set TRUE return just lines contain term \"error\", can useful debugging validating bulk imports.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the server logs — vos_log","text":"Virtuoso logs character vector.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the server logs — vos_log","text":"","code":"if(has_virtuoso())   vos_log() #> [1] \"\""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_odbcinst.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure the ODBC Driver for Virtuoso — vos_odbcinst","title":"Configure the ODBC Driver for Virtuoso — vos_odbcinst","text":"ODBC uses odbcinst.ini file point ODBC library required drive given database.  function helps us automatically locate driver library different operating systems configure odbcinst appropriately OS.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_odbcinst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure the ODBC Driver for Virtuoso — vos_odbcinst","text":"","code":"vos_odbcinst(   system_odbcinst = find_odbcinst(),   local_odbcinst = odbcinst_path() )"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_odbcinst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure the ODBC Driver for Virtuoso — vos_odbcinst","text":"system_odbcinst Path system odbcinst.ini file. (require write access.) Default attempt find file system. local_odbcinst Path local odbcinst use.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_odbcinst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure the ODBC Driver for Virtuoso — vos_odbcinst","text":"path odbcinst file created modified.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_odbcinst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Configure the ODBC Driver for Virtuoso — vos_odbcinst","text":"function called automatically vos_install() thus usually need called user.  Users can also manually configure ODBC outlined https://github.com/r-dbi/odbc#dsn-configuration-files. merely convenience function automating process systems.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_odbcinst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure the ODBC Driver for Virtuoso — vos_odbcinst","text":"","code":"# \\donttest{ ## Configures ODBC and returns silently on success. vos_odbcinst()  ## see where the inst file is located: inst <- vos_odbcinst() inst #> /tmp/Rtmp1yYuh4/vos/config/odbcinst.ini # }"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a handle to an existing Virtuoso Process — vos_process","title":"Return a handle to an existing Virtuoso Process — vos_process","text":"Generally user need access function directly, though may useful debugging purposes.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a handle to an existing Virtuoso Process — vos_process","text":"","code":"vos_process(p = NA)"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a handle to an existing Virtuoso Process — vos_process","text":"p process object, returned vos_process()  vos_start(). (restored cache provided)","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a handle to an existing Virtuoso Process — vos_process","text":"returns processx::process() object cached vos_start() control external Virtuoso sever process R.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a handle to an existing Virtuoso Process — vos_process","text":"","code":"if(has_virtuoso()) vos_process() #> [1] NA"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a SPARQL query — vos_query","title":"Run a SPARQL query — vos_query","text":"Run SPARQL query","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a SPARQL query — vos_query","text":"","code":"vos_query(con, query)"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a SPARQL query — vos_query","text":"con ODBC connection Virtuoso, vos_connect() query SPARQL query statement","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a SPARQL query — vos_query","text":"data.frame containing results query","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_query.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run a SPARQL query — vos_query","text":"SPARQL graph query language similar syntax SQL, allows use variables walk graph nodes.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_query.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Run a SPARQL query — vos_query","text":"https://en.wikipedia.org/wiki/SPARQL https://docs.ropensci.org/rdflib/articles/rdf_intro.html","code":""},{"path":[]},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a SPARQL query — vos_query","text":"","code":"vos_status() #> virtuoso isn't running. # \\donttest{ if(has_virtuoso()){ vos_start() con <- vos_connect()  # show first 4 triples in the database DBI::dbGetQuery(con, \"SPARQL SELECT * WHERE { ?s ?p ?o } LIMIT 4\") } #> Warning: Exiting, virtuoso template not found... is virtuoso installed? #> PROCESS 'virtuoso-t', running, pid 2648. #> Server is now starting up, this may take a few seconds... #> virtuoso isn't running. #> Error: nanodbc/nanodbc.cpp:1138: 00000 #> [OpenLink][Virtuoso iODBC Driver]CL033: Connect failed to localhost:1111 = localhost:1111.  # }"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_set_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"set Virtuoso paths — vos_set_paths","title":"set Virtuoso paths — vos_set_paths","text":"Set location Virtuoso database, configure files, cache, logs preferred location.  Set home location Virtuoso installation.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_set_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"set Virtuoso paths — vos_set_paths","text":"","code":"vos_set_paths(   db_dir = vos_db(),   config_dir = vos_config(),   cache_dir = vos_cache(),   log_dir = vos_logdir(),   home = virtuoso_home() )"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_set_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"set Virtuoso paths — vos_set_paths","text":"db_dir Location data Virtuoso (tables, triplestore) config_dir Location configuration files Virtuoso cache_dir Location cache bulk importing log_dir Location Virutoso Server logs home Location Virtuoso installation","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_set_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"set Virtuoso paths — vos_set_paths","text":"logical vector, elements true setting corresponding variable succeeded (invisibly).","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_set_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"set Virtuoso paths — vos_set_paths","text":"","code":"if(has_virtuoso())   vos_set_paths()"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_start.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a Virtuoso Server — vos_start","title":"Start a Virtuoso Server — vos_start","text":"function attempt start virtuoso server instance can managed completely R.  allows user easily start, stop, access server logs functions R command line.  server automatically shut R exits restarts, can explicitly controlled using vos_kill(), vos_log(), vos_status().","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_start.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a Virtuoso Server — vos_start","text":"","code":"vos_start(ini = NULL, wait = 30)"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_start.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a Virtuoso Server — vos_start","text":"ini path virtuoso.ini configuration file. provided, function attempt determine location default configuration file. wait number seconds wait server come online","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_start.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start a Virtuoso Server — vos_start","text":"invisibly returns processx::process() object can used control external process R.  necessary user store return object, vos_start() caches process object can automatically accessed functions without needing store pass return object.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_start.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start a Virtuoso Server — vos_start","text":"can take time server come ready accept queries.  vos_start() return soon server active, typically takes 10 seconds tested systems. vos_start() monitors Virtuoso logs every one second maximum time wait seconds (default 30 seconds) see server ready.  wait time exceeded, vos_start() simply return current server status.  mean starting failed, may simply need longer server active. Use vos_status() continue monitor server status manually. virtuoso.ini configuration file provided, vos_start() automatically attempt configure one.  control , use vos_configure(), see examples.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_start.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start a Virtuoso Server — vos_start","text":"","code":"# \\donttest{  if(has_virtuoso()){ vos_start() ## or with custom config: vos_start(vos_configure(gigs_ram = 3))  } #> Warning: Exiting, virtuoso template not found... is virtuoso installed? #> PROCESS 'virtuoso-t', running, pid 2687. #> Server is now starting up, this may take a few seconds... #> virtuoso isn't running. #> Warning: Exiting, virtuoso template not found... is virtuoso installed? #> Warning: Exiting, virtuoso template not found... is virtuoso installed? #> PROCESS 'virtuoso-t', running, pid 2694. #> Server is now starting up, this may take a few seconds... #> virtuoso isn't running. # }"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the server status — vos_status","title":"Query the server status — vos_status","text":"Query server status","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the server status — vos_status","text":"","code":"vos_status(p = NA, wait = 10)"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the server status — vos_status","text":"p process object, returned vos_process()  vos_start(). (restored cache provided) wait number seconds wait server come online","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the server status — vos_status","text":"character string indicating state server: \"detected\" process can found \"dead\" process exists reports server alive.  Server may fail come online due errors configuration file. see vos_configure() \"running\" Server accepting queries. \"sleeping\" Server accepting queries.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_status.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Query the server status — vos_status","text":"Note: Use vos_log() see full log","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the server status — vos_status","text":"","code":"if(has_virtuoso())   vos_status() #> virtuoso isn't running."},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_uninstall.html","id":null,"dir":"Reference","previous_headings":"","what":"Uninstall Virtuoso — vos_uninstall","title":"Uninstall Virtuoso — vos_uninstall","text":"Automatic uninstaller Mac OSX Windows clients.","code":""},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_uninstall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uninstall Virtuoso — vos_uninstall","text":"","code":"vos_uninstall()"},{"path":"https://docs.ropensci.org/virtuoso/reference/vos_uninstall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uninstall Virtuoso — vos_uninstall","text":"","code":"if (FALSE) { vos_uninstall() }"},{"path":"https://docs.ropensci.org/virtuoso/news/index.html","id":"virtuoso-018","dir":"Changelog","previous_headings":"","what":"virtuoso 0.1.8","title":"virtuoso 0.1.8","text":"CRAN release: 2021-11-02 Bugfix CRAN’s Solaris configuration","code":""},{"path":"https://docs.ropensci.org/virtuoso/news/index.html","id":"virtuoso-017","dir":"Changelog","previous_headings":"","what":"virtuoso 0.1.7","title":"virtuoso 0.1.7","text":"CRAN release: 2021-11-01 has_virtuoso() sets PATH Mac & Windows may evaluate correctly without start_virtuoso(). (See issue #35)","code":""},{"path":"https://docs.ropensci.org/virtuoso/news/index.html","id":"virtuoso-016","dir":"Changelog","previous_headings":"","what":"virtuoso 0.1.6","title":"virtuoso 0.1.6","text":"CRAN release: 2021-03-23 compatibility recent changes rappdirs","code":""},{"path":"https://docs.ropensci.org/virtuoso/news/index.html","id":"virtuoso-015","dir":"Changelog","previous_headings":"","what":"virtuoso 0.1.5","title":"virtuoso 0.1.5","text":"CRAN release: 2020-09-01 update documentation links & return CRAN","code":""},{"path":"https://docs.ropensci.org/virtuoso/news/index.html","id":"virtuoso-014","dir":"Changelog","previous_headings":"","what":"virtuoso 0.1.4","title":"virtuoso 0.1.4","text":"CRAN release: 2020-01-10 testing compatibility Solaris platforms (CRAN)","code":""}]
